diff a/pyproject.toml b/pyproject.toml	(rejected hunks)
@@ -3,10 +3,12 @@ requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
 build-backend = "setuptools.build_meta"
 
 [project]
+
+
 name = "personal-mnemonic-medium"
 version = "0.0.0"
 authors = [
-  {name = "Martin Bernstorff", email = "martinbernstorfff@gmail.com"}
+  { name = "Martin Bernstorff", email = "martinbernstorfff@gmail.com" },
 ]
 description = "Personal Mnemonic Medium"
 classifiers = [
@@ -14,13 +16,11 @@ classifiers = [
   "Operating System :: MacOS :: MacOS X",
   "Operating System :: Microsoft :: Windows",
   "Programming Language :: Python :: 3.9",
-  "Programming Language :: Python :: 3.10"
+  "Programming Language :: Python :: 3.10",
+  "Programming Language :: Python :: 3.11",
 ]
 requires-python = ">=3.9"
-dependencies = [
-  "pydantic"
-]
-
+dependencies = ["pydantic"]
 [project.license]
 file = "LICENSE"
 name = "MIT"
@@ -32,7 +32,7 @@ dev = [
   "pre-commit>=2.20.0",
   "ruff>=0.0.254",
   "black[jupyter]>=22.8.0",
-  "pandas-stubs>=0.0.0", # type stubs for pandas
+  "pandas-stubs>=0.0.0",    # type stubs for pandas
   "invoke==2.1.1",
 ]
 tests = [
@@ -44,13 +44,13 @@ tests = [
 ]
 docs = [
   "sphinx>=5.3.0",
-  "furo>=2022.12.7",  # theme
+  "furo>=2022.12.7",            # theme
   "sphinx-copybutton>=0.5.1",
   "sphinxext-opengraph>=0.7.3",
   "sphinx_design>=0.3.0",
   "sphinx_togglebutton>=0.2.3",
-  "myst-nb>=0.6.0",  # for rendering notebooks
-  "jupyter>=1.0.0",  # for tutorials
+  "myst-nb>=0.6.0",             # for rendering notebooks
+  "jupyter>=1.0.0",             # for tutorials
 ]
 
 
@@ -95,17 +95,9 @@ select = [
   "RET",
   "RUF",
   "SIM",
-  "W"
-]
-ignore = [
-  "ANN101",
-  "ANN401",
-  "E402",
-  "E501",
-  "F401",
-  "F841",
-  "RET504"
+  "W",
 ]
+ignore = ["ANN101", "ANN401", "E402", "E501", "F401", "F841", "RET504"]
 ignore-init-module-imports = true
 # Allow autofix for all enabled rules (when `--fix`) is provided.
 unfixable = ["ERA"]
@@ -150,13 +142,10 @@ max-complexity = 10
 
 [tool.semantic_release]
 branch = "main"
-version_variable = [
-  "pyproject.toml:version"
-]
-upload_to_pypi = false
-upload_to_release = false
+version_toml = ["pyproject.toml:project.version"]
 build_command = "python -m pip install build; python -m build"
 
+
 [tool.setuptools]
 include-package-data = true
 
@@ -175,11 +164,11 @@ commands =
 
 [testenv:type]
 description: run type checks
-extras = test, dev
+extras = tests, dev
 basepython = py39 # Setting these explicitly avoid recreating env if your shell is set to a different version
 use_develop = true
 commands =
-  pyright .
+  pyright src/
 
 [testenv:docs]
 description: build docs
