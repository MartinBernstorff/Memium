[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "memium"
version = "0.7.0"
authors = [{ name = "Martin Bernstorff", email = "martinbernstorff@gmail.com" }]
description = "Memium"
classifiers = ["Programming Language :: Python :: 3.11"]
requires-python = ">=3.11"

# TODO: https://github.com/MartinBernstorff/memium/issues/260 Setup dependabot automerge
dependencies = [
  "cffi==1.16.0",
  "functionalpy==0.14.0",
  "genanki==0.13.1",
  "misaka==2.1.1",
  "pydantic==2.5.3",
  "sentry-sdk==1.39.1",
  "typer==0.9.0",
  "tqdm==4.66.1",
  "wasabi==1.1.2",
]

[project.license]
file = "LICENSE"

[project.readme]
file = "readme.md"
content-type = "text/markdown"

[project.scripts]
memium = "memium.cli:app"

[project.optional-dependencies]
dev = [
  "cruft==2.15.0",
  "invoke==2.2.0",
  "pyright==1.1.343",
  "pre-commit==3.6.0",
  "ruff==0.1.9",
]
tests = [
  "pytest==7.4.3",
  "pytest-cov==4.1.0",
  "pytest-xdist==3.5.0",
  "pytest-sugar==0.9.7",
  "diff-cover==8.0.2",
]

[project.urls]
homepage = "https://github.com/MartinBernstorff/memium"
repository = "https://github.com/MartinBernstorff/memium"
documentation = "https://MartinBernstorff.github.io/memium/"

[tool.pyright]
exclude = [".*venv*", "*subtasks*", ".git", "build"]
pythonPlatform = "Darwin"
reportMissingTypeStubs = false
reportPrivateImportUsage = false
typeCheckingMode = "strict"

[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
line-length = 80
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C4",
  "C90",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W",
]
ignore = [
  "ANN101",
  "ANN401",
  "E402",
  "E501",
  "F841",
  "RET504",
  "COM812",
  "COM819",
  "W191",
]
ignore-init-module-imports = true
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py",
  "docs/conf.py",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py311"

[tool.ruff.format]
skip-magic-trailing-comma = true

[tool.ruff.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.isort]
known-third-party = ["wandb"]
split-on-trailing-comma = false

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.semantic_release]
branch = "main"
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    # Ignore lines containing '...'
    ".*[.]{3}.*",
]
omit = [
  "test_*.py",
]