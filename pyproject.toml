[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "personal-mnemonic-medium"
version = "0.2.0"
authors = [
  { name = "Martin Bernstorff", email = "martinbernstorfff@gmail.com" },
]
description = "Personal Mnemonic Medium"
classifiers = [
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Programming Language :: Python :: 3.10",
]
requires-python = ">=3.10"
dependencies = [
  "misaka==2.1.1",
  "genanki==0.13.0",
  "docopt==0.6.2",
  "wasabi==1.1.2",
  "tqdm==4.66.1",
  "sentry-sdk==1.32.0",
]

[project.optional-dependencies]
dev = [
  "cruft==2.15.0",
  "pyright==1.1.331",
  "pre-commit==2.20.0",
  "ruff==0.0.254",
  "black==22.8.0",
]
tests = [
  "pytest==7.1.3",
  "pytest-cov==3.0.0",
  "pytest-xdist==3.3.1",
  "pytest-sugar==0.9.7",
]

[project.urls]
homepage = "https://github.com/MartinBernstorff/personal-mnemonic-medium"
repository = "https://github.com/MartinBernstorff/personal-mnemonic-medium"
documentation = "https://MartinBernstorff.github.io/personal-mnemonic-medium/"

[tool.pyright]
exclude = [".*venv*", ".tox", "*.apkg"]
pythonPlatform = "Darwin"
typeCheckingMode = "basic"


[tool.ruff]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
  "A",
  "ANN",
  "ARG",
  "B",
  "C4",
  "COM",
  "D417",
  "E",
  "ERA",
  "F",
  "I",
  "ICN",
  "NPY001",
  "PD002",
  "PIE",
  "PLE",
  "PLW",
  "PT",
  "UP",
  "Q",
  "PTH",
  "RSE",
  "RET",
  "RUF",
  "SIM",
  "W",
]
ignore = ["ANN101", "ANN401", "E402", "E501", "F401", "F841", "UP006", "RET504"]
# Allow autofix for all enabled rules (when `--fix`) is provided.
unfixable = ["ERA"]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "__init__.py",
  "docs/conf.py",
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py39"

[tool.ruff.flake8-annotations]
mypy-init-return = true
suppress-none-returning = true

[tool.ruff.isort]
known-third-party = ["wandb"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.semantic_release]
branch = "main"
version_variable = ["pyproject.toml:version"]
upload_to_pypi = false
upload_to_release = false
build_command = "python -m pip install build; python -m build"

[tool.setuptools]
include-package-data = true


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{39}

[testenv]
description: run unit tests
extras = tests
use_develop = true
commands =
  pytest -n auto {posargs:test}

[testenv:type]
description: run type checks
extras = tests, dev
basepython = py39 # Setting these explicitly avoid recreating env if your shell is set to a different version
use_develop = true
commands =
  pyright .

[testenv:docs]
description: build docs
extras = docs
basepython = py39 # Setting these explicitly avoid recreating env if your shell is set to a different version
use_develop = true
commands =
  sphinx-build -b html docs docs/_build/html
"""
